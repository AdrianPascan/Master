
package org.tempuri;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.5.1
 * 2022-03-17T12:43:52.156+01:00
 * Generated source version: 3.5.1
 *
 */
public final class CalculatorSoap_CalculatorSoap_Client {

    private static final QName SERVICE_NAME = new QName("http://tempuri.org/", "Calculator");

    private CalculatorSoap_CalculatorSoap_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = Calculator.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        Calculator ss = new Calculator(wsdlURL, SERVICE_NAME);
        CalculatorSoap port = ss.getCalculatorSoap();

        {
        System.out.println("Invoking subtract...");
        int _subtract_intA = 1380925121;
        int _subtract_intB = 798060766;
        int _subtract__return = port.subtract(_subtract_intA, _subtract_intB);
        System.out.println("subtract.result=" + _subtract__return);


        }
        {
        System.out.println("Invoking divide...");
        int _divide_intA = 894152235;
        int _divide_intB = -58587602;
        int _divide__return = port.divide(_divide_intA, _divide_intB);
        System.out.println("divide.result=" + _divide__return);


        }
        {
        System.out.println("Invoking add...");
        int _add_intA = 1966114164;
        int _add_intB = 1147858994;
        int _add__return = port.add(_add_intA, _add_intB);
        System.out.println("add.result=" + _add__return);


        }
        {
        System.out.println("Invoking multiply...");
        int _multiply_intA = 650592614;
        int _multiply_intB = -1701742501;
        int _multiply__return = port.multiply(_multiply_intA, _multiply_intB);
        System.out.println("multiply.result=" + _multiply__return);


        }

        System.exit(0);
    }

}
